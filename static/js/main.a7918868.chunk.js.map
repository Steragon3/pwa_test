{"version":3,"sources":["logo.svg","api/fetchWeather.js","components/Search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["fetchWeatcher","query","a","axios","get","params","q","units","APPID","data","Search","useState","setQuery","weather","setWeather","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,oDCkBAA,EAZI,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACGC,IAAMC,IALnB,kDAK4B,CAChCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MARI,sCAGM,uBACXC,EADW,EACXA,KADW,kBASXA,GATW,2CAAH,sD,eCAbC,EAAS,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZV,EADY,KACLW,EADK,OAEWD,mBAAS,IAFpB,mBAEZE,EAFY,KAEHC,EAFG,KAIbC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACD,SAATc,EAAEC,IADQ,gCAEQjB,EAAcC,GAFtB,OAELQ,EAFK,OAGXK,EAAWL,GACXG,EAAS,IAJE,2CAAH,sDAOZ,OACA,sBAAKM,UAAU,iBAAf,UACG,uBAAOC,KAAK,OACXD,UAAU,SACVE,YAAY,YACZC,MAAOpB,EACPqB,SAAU,SAACN,GAAD,OAAOJ,EAASI,EAAEO,OAAOF,QACnCG,WAAYT,IAGVF,EAAQY,MACR,sBAAKP,UAAU,OAAf,UACE,qBAAIA,UAAU,YAAd,UACE,+BAAOL,EAAQa,OACf,8BAAMb,EAAQc,IAAIC,aAEpB,sBAAKV,UAAU,YAAf,UACGW,KAAKC,MAAMjB,EAAQY,KAAKM,MACzB,2CAEF,sBAAKb,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAYc,IAAG,4CAAuCnB,EAAQA,QAAQ,GAAGoB,KAA1D,WAAyEC,IAAKrB,EAAQA,QAAQ,GAAGsB,cAC/H,4BAAItB,EAAQA,QAAQ,GAAGsB,wBAUnCzB,EAAO0B,aAAe,GAEP1B,QCxCA2B,MANf,WACE,OACC,cAAC,EAAD,KCKYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a7918868.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios'\n\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\n\n\nconst fetchWeatcher = async(query) => {\n    const {data} = await axios.get(URL, {\n        params: {\n            q: query,\n            units: 'metric',\n            APPID: API_KEY,\n        }\n    })\n\n    return data\n}\n\nexport default fetchWeatcher\n\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport fetchWeatcher from '../../api/fetchWeather'\n\nimport styles from './Search.module.scss';\n\nconst Search = () => {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState({})\n\n  const search = async (e) => {\n    if(e.key == 'Enter'){\n      const data = await fetchWeatcher(query)\n      setWeather(data)\n      setQuery('')\n    }\n  }\n  return (\n  <div className=\"main-container\">\n     <input type=\"text\"\n      className=\"search\" \n      placeholder=\"search...\"\n      value={query}\n      onChange={(e) => setQuery(e.target.value)}\n      onKeyPress={search}\n      />\n\n      { weather.main && \n        <div className=\"city\">\n          <h2 className=\"city-name\">\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div className=\"city-temp\">\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div className=\"info\">\n            <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      }\n   </div>\n  )\n}\n\nSearch.propTypes = {};\n\nSearch.defaultProps = {};\n\nexport default Search;\n","import logo from './logo.svg';\nimport './App.css';\nimport Search from './components/Search/Search';\n\n\nfunction App() {\n  return (\n   <Search/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}